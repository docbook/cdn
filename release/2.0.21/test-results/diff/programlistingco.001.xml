<html xmlns:deltaxml="http://www.deltaxml.com/ns/well-formed-delta-v1" xmlns="http://www.w3.org/1999/xhtml" xmlns:dxx="http://www.deltaxml.com/ns/xml-namespaced-attribute" xmlns:dxa="http://www.deltaxml.com/ns/non-namespaced-attribute" deltaxml:deltaV2="A!=B" deltaxml:version="2.0" deltaxml:content-type="full-context">
   <head deltaxml:deltaV2="A=B">
      <link href="../../resources/css/db-prism.css" rel="stylesheet" type="text/css"/>
      <link rel="stylesheet" type="text/css" href="../../resources/css/default.css"/>
      <link href="../../resources/css/prism.css" rel="stylesheet" type="text/css"/>
      <meta charset="utf-8"/>
      <meta name="generator" content="DocBook XSL 2.0 Stylesheets Vxxx"/>
      <script type="text/javascript" src="../../resources/js/dbmodnizr.js"/>
      <title>Article wrapper</title>
   </head>
   <body deltaxml:deltaV2="A!=B">
      <article deltaxml:deltaV2="A!=B" id="R.1" class="article">
         <header deltaxml:deltaV2="A=B" class="article-titlepage">
            <h2>Article wrapper</h2>
         </header>
         <pre deltaxml:deltaV2="A" data-line="1,4,9,10,11,27" class="programlisting language-none">
            <code>@rem = '--*-Perl-*--
@echo off
perl.exe %_batchname %$
goto endofperl
@rem ';

# Compress mail...

require 'n:/home/nwalsh/lib/cygnus.pl';
require 'timelocal.pl';
use Cwd;

select (STDERR); $| = 1;
select (STDOUT); $| = 1;

@DIRS = ("/home/nwalsh/Mail");
while (@DIRS) {
    $dir = shift @DIRS;
    opendir (DIR, $dir);
    while ($fname = readdir(DIR)) {
        $file = "$dir/$fname";
        next if ! -d $file;
        next if $fname =~ /^\.\.?$/;

        print "$file\n";
        push (@DIRS, $file);
        &amp;compress ($file);
    }
}

exit;</code>
         </pre><deltaxml:textGroup deltaxml:deltaV2="A"><deltaxml:text deltaxml:deltaV2="A">
         </deltaxml:text></deltaxml:textGroup><div deltaxml:deltaV2="A!=B"><deltaxml:attributes deltaxml:deltaV2="A!=B"><dxa:class deltaxml:deltaV2="A!=B"><deltaxml:attributeValue deltaxml:deltaV2="A">calloutlist</deltaxml:attributeValue><deltaxml:attributeValue deltaxml:deltaV2="B">content</deltaxml:attributeValue></dxa:class></deltaxml:attributes>
            <dl deltaxml:deltaV2="A">
               <dt class="callout">
                  <span class="coline">1</span>
               </dt>
               <dd>
                  <p>The prologue handles embedding a Perl script in a DOS batch file.</p>
               </dd>
               <dt id="skipeof-desc" class="callout">
                  <span class="coline">4</span>
               </dt>
               <dd>
                  <p>The <code class="literal">goto</code> statement, interpreted by the DOS
batch file interpreter, skips over the body of the Perl script. (Note
that this callout has an “id” attribute that is referenced by a
“linkends” attribute on the callout bug for line 4 above.)</p>
               </dd>
               <dt class="callout">
                  <span class="coline">9</span>
                  <span class="coline">10</span>
               </dt>
               <dd>
                  <p>The <code class="literal">require</code> statement sources in external program
fragments.</p>
               </dd>
               <dt class="callout">
                  <span class="coline">11</span>
               </dt>
               <dd>
                  <p>The <code class="literal">use</code> statement is similar, but has additional
utility.  It is a Perl5 function.  (Note that this callout area specifies
both a line and a column.)</p>
               </dd>
               <dt class="callout">
                  <span class="coline">27</span>
               </dt>
               <dd>
                  <p>This is a user subroutine call.</p>
               </dd>
            </dl><pre deltaxml:deltaV2="B" data-line="1,4,9,10,11,27" class="programlisting language-none">
               <code>@rem = '--*-Perl-*--
@echo off
perl.exe %_batchname %$
goto endofperl
@rem ';

# Compress mail...

require 'n:/home/nwalsh/lib/cygnus.pl';
require 'timelocal.pl';
use Cwd;

select (STDERR); $| = 1;
select (STDOUT); $| = 1;

@DIRS = ("/home/nwalsh/Mail");
while (@DIRS) {
    $dir = shift @DIRS;
    opendir (DIR, $dir);
    while ($fname = readdir(DIR)) {
        $file = "$dir/$fname";
        next if ! -d $file;
        next if $fname =~ /^\.\.?$/;

        print "$file\n";
        push (@DIRS, $file);
        &amp;compress ($file);
    }
}

exit;</code>
            </pre><deltaxml:textGroup deltaxml:deltaV2="B"><deltaxml:text deltaxml:deltaV2="B">
            </deltaxml:text></deltaxml:textGroup><div deltaxml:deltaV2="B" class="calloutlist">
               <dl>
                  <dt class="callout">
                     <span class="coline">1</span>
                  </dt>
                  <dd>
                     <p>The prologue handles embedding a Perl script in a DOS batch file.</p>
                  </dd>
                  <dt id="skipeof-desc" class="callout">
                     <span class="coline">4</span>
                  </dt>
                  <dd>
                     <p>The <code class="literal">goto</code> statement, interpreted by the DOS
batch file interpreter, skips over the body of the Perl script. (Note
that this callout has an “id” attribute that is referenced by a
“linkends” attribute on the callout bug for line 4 above.)</p>
                  </dd>
                  <dt class="callout">
                     <span class="coline">9</span>
                     <span class="coline">10</span>
                  </dt>
                  <dd>
                     <p>The <code class="literal">require</code> statement sources in external program
fragments.</p>
                  </dd>
                  <dt class="callout">
                     <span class="coline">11</span>
                  </dt>
                  <dd>
                     <p>The <code class="literal">use</code> statement is similar, but has additional
utility.  It is a Perl5 function.  (Note that this callout area specifies
both a line and a column.)</p>
                  </dd>
                  <dt class="callout">
                     <span class="coline">27</span>
                  </dt>
                  <dd>
                     <p>This is a user subroutine call.</p>
                  </dd>
               </dl>
            </div>
         </div>
      </article>
      <script deltaxml:deltaV2="A=B" src="../../resources/js/prism.js"/>
   </body>
</html>