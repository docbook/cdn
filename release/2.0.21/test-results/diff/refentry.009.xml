<html xmlns:deltaxml="http://www.deltaxml.com/ns/well-formed-delta-v1" xmlns="http://www.w3.org/1999/xhtml" xmlns:dxx="http://www.deltaxml.com/ns/xml-namespaced-attribute" xmlns:dxa="http://www.deltaxml.com/ns/non-namespaced-attribute" deltaxml:deltaV2="A!=B" deltaxml:version="2.0" deltaxml:content-type="full-context">
   <head deltaxml:deltaV2="A=B">
      <link href="../../resources/css/db-prism.css" rel="stylesheet" type="text/css"/>
      <link rel="stylesheet" type="text/css" href="../../resources/css/default.css"/>
      <link href="../../resources/css/prism.css" rel="stylesheet" type="text/css"/>
      <meta charset="utf-8"/>
      <meta name="generator" content="DocBook XSL 2.0 Stylesheets Vxxx"/>
      <script type="text/javascript" src="../../resources/js/dbmodnizr.js"/>
      <title>Unit Test: refentry.009</title>
   </head>
   <body deltaxml:deltaV2="A!=B">
      <article deltaxml:deltaV2="A!=B" id="R.1" class="article">
         <header deltaxml:deltaV2="A=B" class="article-titlepage">
            <h2>Unit Test: refentry.009</h2>
            <h3>Refentry for a OO Class</h3>
            <div class="author">
               <h3>
                  <span class="orgname">DocBook Project Development Team</span>
               </h3>
            </div>
         </header>
         <div deltaxml:deltaV2="A=B" class="lists-of-titles">
            <div class="toc">
               <p>
                  <b>Table of Contents</b>
               </p>
               <ul class="toc">
                  <li>
                     <span class="refentrytitle">
                        <a href="#Catalog_refentry">Catalog</a>
                     </span>
                     <span class="refpurpose"> - do something with a catalog</span>
                  </li>
               </ul>
            </div>
         </div>
         <article deltaxml:deltaV2="A" id="Catalog_refentry" class="refentry">
            <div class="refnamediv">
               <h2>Name</h2>
               <p>
                  <span class="refname">Catalog</span>
                  <span class="refpurpose">
                     <span class="refpurpose-sep"> — </span>
                     <span class="refpurpose-text">do something with a catalog</span>
                     <span class="refpurpose-punc">.</span>
                  </span>
               </p>
            </div>
            <div class="refsynopsisdiv">
               <h2>Synopsis</h2>
               <p>@language='java'</p>
               <pre class="classsynopsis">class <span class="ooclass">
                     <span class="modifier">public </span>
                     <span class="classname">Catalog</span>
                  </span> {<br/>
                  <code class="fieldsynopsis">  <span class="modifier">public </span>
                     <span class="modifier">static </span>
                     <span class="modifier">final </span>
                     <span class="type">int </span>
                     <span class="varname">BASE </span>
                     <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                  <br/>
                  <code class="constructorsynopsis">  <span class="modifier">public </span>
                     <span class="methodname">Catalog</span>();</code>
                  <br/>
                  <code class="methodsynopsis">  <span class="modifier">protected </span>
                     <span class="void">void </span>
                     <span class="methodname">copyReaders</span>(<span class="methodparam">
                        <span class="type">Catalog </span>
                        <span class="parameter">newCatalog</span>
                     </span>);</code>
                  <br/>}</pre>
               <p>@language='cpp'</p>
               <pre class="classsynopsis">
                  <span class="ooclass">
                     <span class="modifier">public </span>
                     <span class="classname">Catalog</span>
                  </span> {<br/>
                  <code class="fieldsynopsis">  <span class="modifier">public </span>
                     <span class="modifier">static </span>
                     <span class="modifier">final </span>
                     <span class="type">int </span>
                     <span class="varname">BASE </span>
                     <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                  <br/>
                  <code class="constructorsynopsis">  <span class="modifier">public </span>
                     <span class="methodname">Catalog</span>
                     <span class="methodname">Catalog</span>();</code>
                  <br/>
                  <code class="methodsynopsis">  <span class="modifier">protected </span>
                     <span class="methodname">copyReaders</span>(<span class="methodparam">
                        <span class="type">Catalog </span>
                        <span class="parameter">newCatalog</span>
                     </span>);</code>
                  <br/>}</pre>
               <p>@language='idl'</p>
               <pre class="classsynopsis">interface <span class="ooclass">
                     <span class="modifier">public </span>
                     <span class="classname">Catalog</span>
                  </span> {<br/>
                  <code class="fieldsynopsis">  <span class="modifier">public </span>
                     <span class="modifier">static </span>
                     <span class="modifier">final </span>
                     <span class="type">int </span>
                     <span class="varname">BASE </span>
                     <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                  <br/>
                  <code class="constructorsynopsis">  <span class="modifier">public </span>
                     <span class="methodname">Catalog</span>();</code>
                  <br/>
                  <code class="methodsynopsis">  <span class="modifier">protected </span>
                     <span class="void">void </span>
                     <span class="methodname">copyReaders</span>(<span class="methodparam">
                        <span class="type">Catalog </span>
                        <span class="parameter">newCatalog</span>
                     </span>);</code>
                  <br/>}</pre>
               <p>@language='perl'</p>
               <pre class="classsynopsis">package <span class="ooclass">
                     <span class="modifier">public </span>
                     <span class="classname">Catalog</span>
                  </span>;<br/>
                  <code class="fieldsynopsis">  <span class="modifier">public </span>
                     <span class="modifier">static </span>
                     <span class="modifier">final </span>
                     <span class="type">int </span>
                     <span class="varname">BASE </span>
                     <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                  <br/>
                  <code class="constructorsynopsis">sub <span class="methodname">Catalog</span> { ... };</code>
                  <br/>
                  <code class="methodsynopsis">sub <span class="methodname">copyReaders</span> { ... };</code>
                  <br/>
               </pre>
            </div>
            <div class="refsect1">
               <div class="refsection-titlepage">
                  <h2>Dummy Refsect1</h2>
               </div>
               <p>This is just a placeholder.</p>
            </div>
         </article><div deltaxml:deltaV2="B" class="content">
            <article id="Catalog_refentry" class="refentry">
               <div class="content">
                  <div class="refnamediv">
                     <h2>Name</h2>
                     <p>
                        <span class="refname">Catalog</span>
                        <span class="refpurpose">
                           <span class="refpurpose-sep"> — </span>
                           <span class="refpurpose-text">do something with a catalog</span>
                           <span class="refpurpose-punc">.</span>
                        </span>
                     </p>
                  </div>
                  <div class="refsynopsisdiv">
                     <h2>Synopsis</h2>
                     <p>@language='java'</p>
                     <pre class="classsynopsis">class <span class="ooclass">
                           <span class="modifier">public </span>
                           <span class="classname">Catalog</span>
                        </span> {<br/>
                        <code class="fieldsynopsis">  <span class="modifier">public </span>
                           <span class="modifier">static </span>
                           <span class="modifier">final </span>
                           <span class="type">int </span>
                           <span class="varname">BASE </span>
                           <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                        <br/>
                        <code class="constructorsynopsis">  <span class="modifier">public </span>
                           <span class="methodname">Catalog</span>();</code>
                        <br/>
                        <code class="methodsynopsis">  <span class="modifier">protected </span>
                           <span class="void">void </span>
                           <span class="methodname">copyReaders</span>(<span class="methodparam">
                              <span class="type">Catalog </span>
                              <span class="parameter">newCatalog</span>
                           </span>);</code>
                        <br/>}</pre>
                     <p>@language='cpp'</p>
                     <pre class="classsynopsis">
                        <span class="ooclass">
                           <span class="modifier">public </span>
                           <span class="classname">Catalog</span>
                        </span> {<br/>
                        <code class="fieldsynopsis">  <span class="modifier">public </span>
                           <span class="modifier">static </span>
                           <span class="modifier">final </span>
                           <span class="type">int </span>
                           <span class="varname">BASE </span>
                           <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                        <br/>
                        <code class="constructorsynopsis">  <span class="modifier">public </span>
                           <span class="methodname">Catalog</span>
                           <span class="methodname">Catalog</span>();</code>
                        <br/>
                        <code class="methodsynopsis">  <span class="modifier">protected </span>
                           <span class="methodname">copyReaders</span>(<span class="methodparam">
                              <span class="type">Catalog </span>
                              <span class="parameter">newCatalog</span>
                           </span>);</code>
                        <br/>}</pre>
                     <p>@language='idl'</p>
                     <pre class="classsynopsis">interface <span class="ooclass">
                           <span class="modifier">public </span>
                           <span class="classname">Catalog</span>
                        </span> {<br/>
                        <code class="fieldsynopsis">  <span class="modifier">public </span>
                           <span class="modifier">static </span>
                           <span class="modifier">final </span>
                           <span class="type">int </span>
                           <span class="varname">BASE </span>
                           <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                        <br/>
                        <code class="constructorsynopsis">  <span class="modifier">public </span>
                           <span class="methodname">Catalog</span>();</code>
                        <br/>
                        <code class="methodsynopsis">  <span class="modifier">protected </span>
                           <span class="void">void </span>
                           <span class="methodname">copyReaders</span>(<span class="methodparam">
                              <span class="type">Catalog </span>
                              <span class="parameter">newCatalog</span>
                           </span>);</code>
                        <br/>}</pre>
                     <p>@language='perl'</p>
                     <pre class="classsynopsis">package <span class="ooclass">
                           <span class="modifier">public </span>
                           <span class="classname">Catalog</span>
                        </span>;<br/>
                        <code class="fieldsynopsis">  <span class="modifier">public </span>
                           <span class="modifier">static </span>
                           <span class="modifier">final </span>
                           <span class="type">int </span>
                           <span class="varname">BASE </span>
                           <span class="initializer">= CatalogEntry.addEntryType("BASE", 1)</span>;</code>
                        <br/>
                        <code class="constructorsynopsis">sub <span class="methodname">Catalog</span> { ... };</code>
                        <br/>
                        <code class="methodsynopsis">sub <span class="methodname">copyReaders</span> { ... };</code>
                        <br/>
                     </pre>
                  </div>
                  <div class="refsect1">
                     <div class="refsection-titlepage">
                        <h2>Dummy Refsect1</h2>
                     </div>
                     <div class="content">
                        <p>This is just a placeholder.</p>
                     </div>
                  </div>
               </div>
            </article>
         </div>
      </article>
      <script deltaxml:deltaV2="A=B" src="../../resources/js/prism.js"/>
   </body>
</html>