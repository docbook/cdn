<article xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0">
<title>Release Notes</title>

<para>This document summarizes the significant changes since the 2.0.3
release. It's been a long time since I did a release, no doubt I've
tinkered with things that aren't well documented. Mea culpa.</para>

<para>There are a series of betas leading up to 2.0.4.</para>

<section>
<title>Changes since 2.0.4-b1</title>

<para>There's nothing significant about the order in which the changes
are listed.</para>

<orderedlist>
<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/48ac7109c435cee8519a7c71b32b19583556192d">Merged</link>
pull request <link xlink:href="https://github.com/ndw/xmlcalabash1/issues/16">#16</link> to create a separate resource root parameter for slide resources.
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/c7cd3d90209d86024e3145d09ac71becfaa37cff">Merged</link>:
pull request <link xlink:href="https://github.com/ndw/xmlcalabash1/issues/29">#29</link> to move generated <tag class="attribute">xml:id</tag> attributes out
of AVTs and into <tag>xsl:attribute</tag> syntax (to make ExistDB happy).
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/ffc5e4b53269b6a68f401b1781b61157e362f842">Merged</link>:
pull request <link xlink:href="https://github.com/ndw/xmlcalabash1/issues/31">#31</link> fixing a catastrophic bug in the handling of CALS tables.
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/d97c507af7e449ca864af781c2d7ddc4e23c6fed">Improved</link> the
DocBook XProc pipeline.
</para>
</listitem>
</orderedlist>

</section>

<section>
<title>Changes since 2.0.3</title>

<para>This section summarizes the significant changes since the 2.0.3
release. It's been a long time since I did a release, no doubt I've
tinkered with things that aren't well documented. Mea culpa. There's
nothing significant about the order in which the changes are listed.</para>

<para>That said: the big ones are first.</para>

<orderedlist>
<listitem>
<para>DocBook processing has for some time now been a multi-stage process.
I've decided to break these stages out separately for ease of maintenance
and configurability.</para>

<para>There's an XProc pipeline in the
<filename class="directory">/pipelines/</filename> directory that runs
them all. For convenience, I've also provided an Ant build script and
a MarkLogic query module to perform the pipelining.</para>
</listitem>

<listitem>
<para>I've (largely) abandoned attempts to do “server side” pretty printing
of verbatim environments. I was more-or-less happy with Pygments, but as
Jython development hasn't kept up with Python development (AFAICT) it's
become too difficult to make it work. Also, the effort expended by the stylesheets
to do the pretty printing was significant and could be quite slow.</para>
<para>Modern sites seem to rely on client-side pretty printing, so I'm going
to give that a try. Some of the “server side” work will be preserved for
the “XHTML for print” stylesheets, but I don't know how that's going to
shake out.</para>
<para>In the short term, I've selected
<citetitle xlink:href="http://prismjs.com/">Prism</citetitle> for the
rendering. It's small, efficient, and seems well supported. I was able to
make <tag>programlistingco</tag> elements perform both line and line range
highlighting with it, which I thought was a nice touch.</para>

<para>There's a small Prism configuration in the DocBook github “CDN”.
You're encouraged to customize the stylesheets to use your own configuration.
</para>

<para>If you've got a strong preference for some other client-side
pretty printer, let me know. I'm willing to attempt to make the stylesheets
support more than one, if there's sufficient interest.</para>
</listitem>

<listitem>
<para>I've (provisionally, perhaps) decided to abandon development of
the XSL FO stylesheets. Honestly, they were never very good in the
XSLT 2.0 stylesheets anyway. If you still want to use FO, your best
bet is probably the XSLT 1.0 stylesheets.</para>
<para>With the <citetitle xlink:href="http://www.w3.org/XML/XPPL/">XML
Print and Page Layout Working Group</citetitle> shuttered, it seems unlikely
that there will be significant further developments in XSL FO.
</para>
<para>Attention now seems to be focused (I observe without comment) on
development of CSS facilities for doing paged layout. I will be working on
“XHTML for print” stylesheets that can take advantage of those facilities.
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/6eab30a2aa70e6495b820774557f17ff837e6fc5">Fixed</link>
processing of HTML attributes in some environments.
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/166cf1c55550b2076b309a7d219b92a062285346">Fixed</link>
a bug in <function>f:resolve-path</function>
</para>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/234d2a87fae4073a0c57be57a5e2481a5c80fa7d">Upgraded</link>
to xspec-0.3.0; removed saxon9-ant.jar as it just didn't work anymore;
fixed some build paths; updated to saxon 9.5.1.1.</para>
<important>
<para>The XSpec unit tests aren't really working at the moment due to
the change over to a pipelined architecture. I'll be working on fixing
that in due course.</para>
</important>
</listitem>

<listitem>
<para><link xlink:href="https://github.com/ndw/xmlcalabash1/commit/b5858a5d48d5a13aaed99e401c3a2af0aa82dfe8">Removed</link>
'ext'. It now lives in the
<link xlink:href="https://github.com/docbook/xslt20-java"/> repository
</para>
</listitem>

</orderedlist>
</section>
</article>
